name: Dev Build
concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: false

on:
  push:
    branches:
      - main
      - feature/wip
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

env:
  RELEASE_VERSION: v0.0.0

jobs:
  build:
    name: Build and Release with GoReleaser
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.23.8 # Until https://github.com/golang/go/issues/73617 is fixed

      - name: Set env
        run: |
          echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Install GitHub CLI
        run: |
          echo "deb [trusted=yes] https://apt.fury.io/cli/ * *" | sudo tee /etc/apt/sources.list.d/fury-cli.list    
          sudo apt-get update && sudo apt-get install -y gh fury-cli

      - name: Delete existing tag
        env:
          FURY_API_TOKEN: ${{ secrets.FURY_API_TOKEN }}
        run: |
          git config --global user.email "dmitry@atd.sh"
          git config --global user.name "Dmitry Kireev"
          git tag -d "${{ env.RELEASE_VERSION }}" || echo "No tag to delete"
          git push origin :refs/tags/${{ env.RELEASE_VERSION }} || echo "No remote tag to delete"

          export VERSION="${RELEASE_VERSION#v}"
          echo "version: ${VERSION}"

          echo "fury cli: fury --account DimmKirr --api-token ${FURY_API_TOKEN} yank "atun@${VERSION}" --force"
          fury --account DimmKirr --api-token ${FURY_API_TOKEN} yank "atun@${VERSION}" --force || echo "Version ${VERSION} not found in a fury repo."

      - name: Add tag
        run: |
          git tag -a ${{ env.RELEASE_VERSION }} -m "Development release"
          git push origin ${{ github.ref_name }}

      - name: Build with GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean -f .goreleaser.dev.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_GITHUB_TOKEN: ${{ secrets.HOMEBREW_TAP_GITHUB_TOKEN }}
          RELEASE_VERSION: "${{ env.RELEASE_VERSION }}"
          FURY_TOKEN: ${{ secrets.FURY_PUSH_TOKEN }}
          GIT_SHA: ${{ env.SHORT_SHA }}
          GITHUB_ACTOR: ${{ github.actor }}

      - name: Publish release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          gh release edit "${{ env.RELEASE_VERSION }}" --draft=false --latest=false

      - name: Set version output
        run: echo "version=${{ env.RELEASE_VERSION }}" >> $GITHUB_OUTPUT
        id: version_step

  build-site:
    name: Build Site
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: npm
          cache-dependency-path: website/package-lock.json

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Install dependencies
        run: npm ci
        working-directory: website

      - name: Build
        run: |
          npm run docs:build
        working-directory: website

      - name: Upload Pages Artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ${{ github.workspace }}/website/.vitepress/dist

  deploy-site:
    name: Deploy Site
    needs:
      - build-site
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
